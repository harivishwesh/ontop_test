{
  "ontop.cardinalityMode": "Default value: STRICT. If set to LOOSE, the cardinality is not guaranteed to be preserved anymore.",
  "ontop.testMode": "Default value: false. If true, performs extra checks. Should not be enabled in production.",
  "ontop.maxNbChildrenLiftingDBFS": "Default value: 10. Above this threshold, the preference for a function symbol to be post-processed is not considered.",
  "ontop.sameAs": "Default value: false",
  "jdbc.url": "",
  "jdbc.name": "",
  "jdbc.driver": "",
  "ontop.queryOntologyAnnotation": "",
  "ontop.inferDefaultDatatype": "Default value: false. If false, throws an exception if the system is not able to infer the datatype from the database If true use default datatype (xsd:string).",
  "ontop.tolerateAbstractDatatype": "Default value: ????. If false, throws an exception is an abstract datatype is used for a literal in a mapping assertion. If true, abstract datatypes will be replaced by concrete ones.",
  "ontop.isCanonicalIRIComplete": "Let S be the data source, and if M is a set of mapping assertions, let M(S) be the graph derived by applying M to S (without ontology). And let dom(M(S)) (resp. range(M(S))) be all subjects (resp. objects) of some triple in M(S). Now let C be all mapping assertions with isCanonicalIRIOf as predicate, and let A_sub (resp(A_obj)) be all mapping assertions whose subject (resp. object) is built with a URI template, and whose predicate is not isCanonicalIRIOf. If this parameter is set to true, then for any a in A_sub, either dom({a}(S)) \\cap range(C(S)) = \\emptyset, or dom({a}(S)) \\subseteq range(C(S))). Similarly, for any a in A_obj, either range({a}(S)) \\cap range(C(S)) = \\emptyset, or range({a}(S)) \\subseteq range(C(S))).",
  "mapping.baseIri": "See www.w3.org/TR/r2rml/#dfn-base-iri",
  "ontop.existentialReasoning": "",
  "ontop.distinctResultSet": "DEPRECATED.",
  "ontop.avoidPostProcessing": "",
  "ontop.excludeInvalidTriplesFromResultSet": "Default value: false. If false, makes the query fail when an invalid triple is detected.",
  "ontop.cache.query.size": "",
  "ontop.queryLogging": "",
  "ontop.applicationName": "",
  "ontop.queryLogging.includeSparqlQuery": "Includes the SPARQL query string into the query log",
  "ontop.queryLogging.includeReformulatedQuery": "Includes the reformulated query into the query log",
  "ontop.queryLogging.includeClassesAndProperties": "Includes classes and properties into the query log",
  "ontop.queryLogging.includeTables": "Includes DB tables/views into the query log",
  "ontop.queryLogging.includeHttpHeader.": "",
  "ontop.queryLogging.extractQueryTemplate": "",
  "ontop.queryLogging.decomposition": "",
  "ontop.queryLogging.decompositionAndMergingMutuallyExclusive": "",
  "ontop.includeFixedObjectPositionInDescribe": "Default value: false. If true the pattern \"?s ?p <to_describe> \" is also considered when answering a DESCRIBE query.",
  "ontop.query.defaultTimeout": "Query EVALUATION timeout (executed on the DB engine) Has no effect if negative or equal to 0.",
  "ontop.permanentConnection": "Needed by some in-memory DBs (e.g. an H2 DB storing a semantic index)",
  "ontop.http.cacheControl": "",
  "ontop.http.cache.maxAge": "DEPRECATED",
  "ontop.http.cache.staleWhileRevalidate": "DEPRECATED.",
  "ontop.http.cache.staleIfError": "DEPRECATED"
}
